{"ast":null,"code":"var _jsxFileName = \"/Users/jorgeperez/Documents/Proyectos/soccermanager/src/components/Jugadores.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Jugadores = _ref => {\n  _s();\n\n  let {\n    jugadores,\n    agregarTitular,\n    agregarSuplente\n  } = _ref;\n  const gridJugadores = /*#__PURE__*/createRef();\n  useEffect(() => {\n    setScrollContainer();\n    document.addEventListener('click', setScrollContainer);\n  }, []); // Funci칩n que fija el tama침o del grid de los jugadores\n\n  const setScrollContainer = function () {\n    let desktop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    let container = gridJugadores.current;\n\n    if (container) {\n      const generatedGrid = () => {\n        let items = container.getElementsByClassName('jugador');\n        let itemsLength = items.length;\n        let bp = window.matchMedia(\"(min-width: 640px)\").matches ? window.matchMedia(\"(min-width: 1024px)\").matches ? 4 : 2 : 1;\n\n        const getWidth = () => {\n          let n = bp + (itemsLength > bp ? 0.3 : 0);\n          return itemsLength / n * 100;\n        };\n\n        return `\n                display: grid;\n                grid-template-columns: repeat(${itemsLength}, 225px);\n                grid-gap: 1rem;\n                width : ${getWidth()}%;\n              `;\n      };\n\n      let styles = !desktop && window.matchMedia(\"(min-width: 1024px)\").matches ? `display: grid; grid-row-gap: 1rem;` : generatedGrid();\n      container.setAttribute('style', styles);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Jugadores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenedor-jugadores\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: gridJugadores,\n        onClick: () => setScrollContainer.bind(this),\n        children: jugadores.map(j => /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"jugador\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: j.foto,\n            alt: j.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: j.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => agregarTitular(j),\n              children: \"Titular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => agregarSuplente(j),\n              children: \"Suplente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, j.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Jugadores, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Jugadores;\n\nconst mapStateToProps = state => ({\n  jugadores: state.jugadores\n});\n\nconst mapDispatchToProps = dispatch => ({\n  agregarTitular(jugador) {\n    dispatch({\n      type: \"AGREGAR_TITULAR\",\n      jugador\n    });\n  },\n\n  agregarSuplente(jugador) {\n    dispatch({\n      type: \"AGREGAR_SUPLENTE\",\n      jugador\n    });\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Jugadores);\n\nvar _c;\n\n$RefreshReg$(_c, \"Jugadores\");","map":{"version":3,"sources":["/Users/jorgeperez/Documents/Proyectos/soccermanager/src/components/Jugadores.jsx"],"names":["React","useEffect","createRef","connect","Jugadores","jugadores","agregarTitular","agregarSuplente","gridJugadores","setScrollContainer","document","addEventListener","desktop","container","current","generatedGrid","items","getElementsByClassName","itemsLength","length","bp","window","matchMedia","matches","getWidth","n","styles","setAttribute","bind","map","j","foto","nombre","id","mapStateToProps","state","mapDispatchToProps","dispatch","jugador","type"],"mappings":"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","sourcesContent":["import React, { useEffect, createRef } from \"react\"\nimport { connect } from \"react-redux\";\n\nconst Jugadores = ({jugadores, agregarTitular, agregarSuplente}) => {\n  \n  const gridJugadores = createRef()\n\n  useEffect(() => {\n    setScrollContainer()\n    document.addEventListener('click', setScrollContainer)\n  }, []) \n  \n  // Funci칩n que fija el tama침o del grid de los jugadores\n  const setScrollContainer = (desktop = true) => {\n    let container = gridJugadores.current\n    if (container) {\n      const generatedGrid = () => {\n        let items = container.getElementsByClassName('jugador')\n        let itemsLength = items.length\n        let bp = window.matchMedia(\"(min-width: 640px)\").matches ? window.matchMedia(\"(min-width: 1024px)\").matches ? 4 : 2 : 1\n\n        const getWidth = () => {\n          let n = bp + (itemsLength > bp ? 0.3 : 0)\n          return (itemsLength / n) * 100\n        }\n        return `\n                display: grid;\n                grid-template-columns: repeat(${itemsLength}, 225px);\n                grid-gap: 1rem;\n                width : ${getWidth()}%;\n              `\n      }\n      let styles = !desktop && window.matchMedia(\"(min-width: 1024px)\").matches ? `display: grid; grid-row-gap: 1rem;` : generatedGrid()\n      container.setAttribute('style', styles)\n    }\n  }\n\n  return (\n    <section>\n      <h2>Jugadores</h2>\n      <div className=\"contenedor-jugadores\">\n        <div ref={gridJugadores} onClick={() => setScrollContainer.bind(this)}>\n          {\n            jugadores.map(j => (\n              <article className=\"jugador\" key={j.id}>\n                <img src={j.foto} alt={j.nombre} />\n                <h3>{j.nombre}</h3>\n                <div>\n                  <button onClick={() => agregarTitular(j)}>Titular</button>\n                  <button onClick={() => agregarSuplente(j)}>Suplente</button>\n                </div>\n              </article>\n            ))\n          }\n        </div>\n      </div>\n    </section>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  jugadores: state.jugadores\n})\n\nconst mapDispatchToProps = dispatch => ({\n  agregarTitular(jugador) {\n    dispatch({\n      type: \"AGREGAR_TITULAR\",\n      jugador\n    })\n  },\n  agregarSuplente(jugador) {\n    dispatch({\n      type: \"AGREGAR_SUPLENTE\",\n      jugador\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Jugadores)"]},"metadata":{},"sourceType":"module"}